<html>
<meta charset="utf-8">

<head>
	<title>D3动画-直方图键盘交互动画</title>
</head>

<body>
	<h4>请按一下键盘上的任意键，体验交互……</h4>
	<script src="./rule/d3.v3.min.js" charset="utf-8"></script>
	<script>

		var width = (window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth) * 0.98;
		var height = (window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight) * 0.9;
		var color = d3.scale.category10();

		var dataset = new Array(10);
		for (var i = 0; i < dataset.length; i++) {
			dataset[i] = height * Math.random();
		}
		var svg = d3.select("body")			//选择<body>
			.append("svg")			//在<body>中添加<svg>
			.attr("width", width)	//设定<svg>的宽度属性
			.attr("height", height);//设定<svg>的高度属性				
		//矩形所占的宽度（包括空白），单位为像素		
		var rectStep = width / dataset.length;
		//矩形所占的宽度（不包括空白），单位为像素
		var rectWidth = rectStep - 10;
		var rect = svg.selectAll("rect")
			.data(dataset)		//绑定数据
			.enter()			//获取enter部分
			.append("rect")	    //添加rect元素，使其与绑定数组的长度一致
			.attr("x", function (d, i) {		//设置矩形的x坐标
				return i * rectStep;
			})
			.attr("y", height)
			.attr("fill", function (i) {
				return color(i);
			})
			.attr("width", rectWidth)		//设置矩形的宽度
			.attr("height", 0)
			.transition()
			.duration(2000)
			.ease("bounce")
			.attr("height", function (d) {	//设置矩形的高度
				return d;
			})
			.attr("y", function (d) {		//设置矩形的y坐标
				return height - d;
			});
		d3.select("body").on("keydown", function () {
			svg.selectAll("rect").attr("fill", "yellow");
		}).on("keyup", function () {
			/*------实现按键离开后颜色还原------*/
			var temp = d3.selectAll("rect")			
				.attr("fill", function (i) {
					return color(i);
			});
			/*------实现按键离开后颜色还原------*/
		});							
	</script>
</body>

</html>